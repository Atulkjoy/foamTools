#!/usr/bin/python

import os
import sys

sys.path.append('../../python')
import pyOpenFOAM

# Read number of processors from command line (1 by default)
np = pyOpenFOAM.read_inputs(sys.argv)
print "Running with %d processors" % np

# Make the *.foam file for ParaView
pyOpenFOAM.touch_foam_files('test')

os.system('cp -r 0.org 0')

# Generate the initial mesh
print "Generating blockMesh"
pyOpenFOAM.run('blockMesh')


# Decompose parallel problems
if np > 1:
    # For parallel runs, decompose the problem
    print "Decomposing problem"
    #pyOpenFOAM.set_decompose_par(np,"simple",1) #aspect ratio = 1 H/W
    pyOpenFOAM.run('decomposePar',args='-cellDist')
    for p in range(0,np):
        os.system('cp -r processor%1d/0 processor%1d/0.org' % (p, p) ) 
        os.system('touch processor%1d/test.foam' % p )
    

# Should be greater than max mesh refinement level set in dynamicMeshDict

n_adapts = 3


for i in range(0,n_adapts):
    print "Pre-Refinement loop", i
    pyOpenFOAM.run('VOFSetFields',np)
    pyOpenFOAM.run('initDynamicMesh',np,hide=False)
    if np > 1:
        lasttime = pyOpenFOAM.get_sorted_time_folders(True).pop()
        for p in range(0,np):
            proc_folder = "processor"+str(p)
            os.system('cp '+proc_folder+'/0.org/* '+proc_folder+'/'+lasttime+'/')
    else:
        lasttime = pyOpenFOAM.get_sorted_time_folders(False).pop()
        # folder now has alphaVapor.gz. When we copy 0.org into it, then it
        # will have alphaVapor and alphaVapor.gz, so we have to delete it
        # first
        os.system('rm '+lasttime+'/alpha1*')
        os.system('cp 0.org/* '+lasttime+'/')


#initialize fields
print "Setting final field values"
pyOpenFOAM.run('VOFSetFields',np)

#pyOpenFOAM.run('redistributeParPlus',np,hide=False)

#print "Running the problem"
#pyOpenFOAM.run('interDyMFoam',np,hide=False)



print "Finished!"


